/*
 * pwm.h
 *
 *  Created on: Jul 25, 2023
 *      Author: Phong
 */

#ifndef PWM_H_
#define PWM_H_

#include <stdint.h>
#include "inc/TM4C123GH6PM.h"
#include "pwm.h"

#define PORTA (1U << 0)
#define PORTB (1U << 1)
#define PORTC (1U << 2)
#define PORTD (1U << 3)
#define PORTE (1U << 4)
#define PORTF (1U << 5)

#define PWM0CONFIG (1U << 4)

/*  Enable the PWM clock by writing a value of 0x0010.0000 to the RCGC0 register in the System
Control module (see page 456).  */
void pwmClockEnable();

/*  Enable the clock to the appropriate GPIO module via the RCGC2 register in the System Control
module (see page 464).  */
void gpioClockEnable();

/*  In the GPIO module, enable the appropriate pins for their alternate function using the
GPIOAFSEL register. To determine which GPIOs to configure, see Table 23-4 on page 1344. */
void gpioAltPinEnable();

/* Configure the PMCn fields in the GPIOPCTL register to assign the PWM signals to the appropriate
pins (see page 688 and Table 23-5 on page 1351).    */
void pwmSignalPinConfig();

/*  Configure the Run-Mode Clock Configuration (RCC) register in the System Control module
to use the PWM divide (USEPWMDIV) and set the divider (PWMDIV) to divide by 2 (000).    */
void pwmDividerConfig();

/*  Configure the PWM generator for countdown mode with immediate updates to the parameters.
 - Write the PWM0CTL register with a value of 0x0000.0000.
 - Write the PWM0GENA register with a value of 0x0000.008C.
 - Write the PWM0GENB register with a value of 0x0000.080C.  */
void pwmCntDownModeConfig();

/*  Set the period. For a 25-KHz frequency, the period = 1/25,000, or 40 microseconds. The PWM
clock source is 10 MHz; the system clock divided by 2. Thus there are 400 clock ticks per period. Use this value to set the PWM0LOAD register. In Count-Down mode, set the LOAD field in the
PWM0LOAD register to the requested period minus one.
 - Write the PWM0LOAD register with a value of 0x0000.018F.    */
void pwmPeriodSet();

/*  Set the pulse width of the MnPWM0 pin for a 25% duty cycle.
 - Write the PWM0CMPA register with a value of 0x0000.012B.  */
void mnpwm0PulseWidthSet();


/*  Start the timers in PWM generator 0.
 - Write the PWM0CTL register with a value of 0x0000.0001.   */
void pwm0TimerStart();

/*  Enable PWM outputs.
 - Write the PWMENABLE register with a value of 0x0000.0003. */
void pwmOutputEnable();


#endif /* PWM_H_ */
